name: Publish Docker Image on DockerHub, Create GitHub Release

on:
  # when a push is made to the main branch (like when a pull request is merged, or something is pushed directly)
  workflow_dispatch:
  # push:
  #   branches: ["main"]

permissions:
  contents: read # for checkout

jobs:
  build-publish-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # note: we don't use the --latest flag. this way, a particular short_sha
      # of cartogram-web can be used to identify the version of the executable
      # as internal/executable/release-tag.txt will specify version
      - name: Pull Executable
        id: pull-exec
        run: |
          bash ${{github.workspace}}/tools/pull-executable.sh
          echo "CPP_TAG=$(cat ${{github.workspace}}/internal/executable/release-tag.txt)" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install dependencies
        run: npm clean-install

      - name: Create release and get semantic version
        id: vars
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npx semantic-release
          VERSION=$(cat internal/version.txt | tr -d ' \n')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build javascript
        run: npm run build:js

      - name: Build and Publish Docker Image
        uses: elgohr/Publish-Docker-Github-Action@2.18
        with:
          name: gocartio/cartogram-web
          username: ${{ secrets.DOCKER_USERNAME }}
          # DOCKER_PASSWORD should not be your actual password, but a docker access token
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: "latest,${{ steps.vars.outputs.version }}"

      - name: Set release URLs
        id: release-urls
        run: |
          echo "gh_release_url=https://github.com/${{ github.repository }}/releases/tag/${{ steps.vars.outputs.version }}" >> $GITHUB_OUTPUT
          echo "dh_release_url=https://hub.docker.com/r/gocartio/cartogram-web/tags?name=${{ steps.vars.outputs.version }}" >> $GITHUB_OUTPUT
          echo "cpp_release_url=https://github.com/mgastner/cartogram-cpp/releases/tag/${{ steps.pull-exec.outputs.CPP_TAG }}" >> $GITHUB_OUTPUT

      - name: Display Release URLs in GitHub Actions Job Summary
        run: |
          echo "### \`cartogram-web\`" >> $GITHUB_STEP_SUMMARY
          echo "Build and release on branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- GitHub Release URL: ${{ steps.release-urls.outputs.gh_release_url }}" >> $GITHUB_STEP_SUMMARY
          echo "- DockerHub Release URL: ${{ steps.release-urls.outputs.dh_release_url }}" >> $GITHUB_STEP_SUMMARY
          echo "### \`cartogram-cpp\`" >> $GITHUB_STEP_SUMMARY
          echo "- Release URL: ${{ steps.release-urls.outputs.cpp_release_url }}" >> $GITHUB_STEP_SUMMARY
